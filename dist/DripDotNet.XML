<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DripDotNet</name>
    </assembly>
    <members>
        <member name="M:Drip.DripClient.SubscribeToCampaign(System.String,Drip.ModifyDripCampaignSubscriberRequest)">
            <summary>
            Subscribe a Subscriber to a campaign.
            See: https://www.getdrip.com/docs/rest-api#subscribe
            </summary>
            <param name="campaignId">The campaign id.</param>
            <param name="campaignSubscriber">A ModifyDripCampaignSubscriberRequest containing at least an Email address.</param>
            <returns>A DripSubscribersResponse.</returns>
        </member>
        <member name="M:Drip.DripClient.SubscribeToCampaignAsync(System.String,Drip.ModifyDripCampaignSubscriberRequest,System.Threading.CancellationToken)">
            <summary>
            Subscribe a Subscriber to a campaign.
            See: https://www.getdrip.com/docs/rest-api#subscribe
            </summary>
            <param name="campaignId">The campaign id.</param>
            <param name="campaignSubscriber">A ModifyDripCampaignSubscriberRequest containing at least an Email address.</param>
            <param name="cancellationToken">The CancellationToken to be used to cancel the request.</param>
            <returns>A Task that, when completed, will contain a DripSubscribersResponse.</returns>
        </member>
        <member name="M:Drip.DripClient.UnsubscribeFromCampaign(System.String,System.String)">
            <summary>
            Unsubscribe a subscriber globally or from one specific campaign.
            See: https://www.getdrip.com/docs/rest-api#unsubscribe
            </summary>
            <param name="idOrEmail">Required. The id or email address of the subscriber.</param>
            <param name="campaignId">Optional. The campaign from which to unsubscribe the subscriber. Defaults to all.</param>
            <returns>A DripSubscribersResponse.</returns>
        </member>
        <member name="M:Drip.DripClient.UnsubscribeFromCampaignAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Unsubscribe a subscriber globally or from one specific campaign.
            See: https://www.getdrip.com/docs/rest-api#unsubscribe
            </summary>
            <param name="idOrEmail">Required. The id or email address of the subscriber.</param>
            <param name="campaignId">Optional. The campaign from which to unsubscribe the subscriber. Defaults to all.</param>
            <param name="cancellationToken">The CancellationToken to be used to cancel the request.</param>
            <returns>A Task that, when completed, will contain a DripSubscribersResponse.</returns>
        </member>
        <member name="M:Drip.DripClient.TrackEvent(Drip.DripEvent)">
            <summary>
            Track an event.
            See: https://www.getdrip.com/docs/rest-api#record_event
            </summary>
            <param name="dripEvent">The event to track.</param>
            <returns>On success, a DripResponse with StatusCode of Created.</returns>
        </member>
        <member name="M:Drip.DripClient.TrackEventAsync(Drip.DripEvent,System.Threading.CancellationToken)">
            <summary>
            Track an event.
            See: https://www.getdrip.com/docs/rest-api#record_event
            </summary>
            <param name="dripEvent">The event to track.</param>
            <param name="cancellationToken">The CancellationToken to be used to cancel the request.</param>
            <returns>A Task that, when completed successfully, will contain a StatusCode of Created.</returns>
        </member>
        <member name="M:Drip.DripClient.TrackEvents(System.Collections.Generic.IEnumerable{Drip.DripEvent})">
            <summary>
            Track a collection of events all at once.
            See: https://www.getdrip.com/docs/rest-api#event_batches
            </summary>
            <param name="dripEvents">An enumerable collection of between 1 and 1000 DripEvents.</param>
            <returns>On success, a DripResponse with StatusCode of Created.</returns>
        </member>
        <member name="M:Drip.DripClient.TrackEventsAsync(System.Collections.Generic.IEnumerable{Drip.DripEvent},System.Threading.CancellationToken)">
            <summary>
            Track a collection of events all at once.
            See: https://www.getdrip.com/docs/rest-api#event_batches
            </summary>
            <param name="dripEvents">An enumerable collection of between 1 and 1000 DripEvents.</param>
            <param name="cancellationToken">The CancellationToken to be used to cancel the request.</param>
            <returns>A Task that, when completed successfully, will contain a StatusCode of Created.</returns>
        </member>
        <member name="M:Drip.DripClient.ApplyTagToSubscriber(System.String,System.String)">
            <summary>
            Apply a tag to a subscriber.
            See: https://www.getdrip.com/docs/rest-api#apply_tag
            </summary>
            <param name="email">The subscriber's email address.</param>
            <param name="tag">The tag to apply. E.g. "Customer"</param>
            <returns>On success, a DripResponse with StatusCode of Created.</returns>
        </member>
        <member name="M:Drip.DripClient.ApplyTagToSubscriberAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Apply a tag to a subscriber.
            See: https://www.getdrip.com/docs/rest-api#apply_tag
            </summary>
            <param name="email">The subscriber's email address.</param>
            <param name="tag">The tag to apply. E.g. "Customer"</param>
            <param name="cancellationToken">The CancellationToken to be used to cancel the request.</param>
            <returns>A Task that, when completed successfully, will contain a StatusCode of NoContent.</returns>
        </member>
        <member name="M:Drip.DripClient.RemoveTagFromSubscriber(System.String,System.String)">
            <summary>
            Remove a tag from a subscriber.
            See: https://www.getdrip.com/docs/rest-api#remove_tag
            </summary>
            <param name="email">The subscriber's email address.</param>
            <param name="tag">The tag to remove. E.g. "Customer"</param>
            <returns>On success, a DripResponse with a StatusCode of NoContent.</returns>
        </member>
        <member name="M:Drip.DripClient.RemoveTagFromSubscriberAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Remove a tag from a subscriber.
            See: https://www.getdrip.com/docs/rest-api#remove_tag
            </summary>
            <param name="email">The subscriber's email address.</param>
            <param name="tag">The tag to remove. E.g. "Customer"</param>
            <param name="cancellationToken">The CancellationToken to be used to cancel the request.</param>
            <returns>A Task that, when completed successfully, will contain a DripResponse with a StatusCode of NoContent.</returns>
        </member>
        <member name="M:Drip.DripClient.GetSubscriber(System.String)">
            <summary>
            Fetch a subscriber.
            See: https://www.getdrip.com/docs/rest-api#fetch_subscriber
            </summary>
            <param name="idOrEmail">Required. The String id or email address of the subscriber.</param>
            <returns>A DripSubscribersResponse.</returns>
        </member>
        <member name="M:Drip.DripClient.GetSubscriberAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Fetch a subscriber.
            See: https://www.getdrip.com/docs/rest-api#fetch_subscriber
            </summary>
            <param name="idOrEmail">Required. The String id or email address of the subscriber.</param>
            <param name="cancellationToken">The CancellationToken to be used to cancel the request.</param>
            <returns>A Task that, when completed, will contain a DripSubscribersResponse.</returns>
        </member>
        <member name="M:Drip.DripClient.CreateOrUpdateSubscriber(Drip.ModifyDripSubscriberRequest)">
            <summary>
            Create or update a subscriber.
            See: https://www.getdrip.com/docs/rest-api#create_or_update_subscriber
            </summary>
            <param name="subscriber">The DripSubscriber to create or update.</param>
            <returns>A DripSubscribersResponse</returns>
        </member>
        <member name="M:Drip.DripClient.CreateOrUpdateSubscriberAsync(Drip.ModifyDripSubscriberRequest,System.Threading.CancellationToken)">
            <summary>
            Create or update a subscriber.
            See: https://www.getdrip.com/docs/rest-api#create_or_update_subscriber
            </summary>
            <param name="subscriber"></param>
            <param name="cancellationToken">The CancellationToken to be used to cancel the request.</param>
            <returns>A Task that, when completed, will contain a DripSubscribersResponse.</returns>
        </member>
        <member name="M:Drip.DripClient.CreateOrUpdateSubscribers(System.Collections.Generic.IEnumerable{Drip.ModifyDripSubscriberRequest})">
            <summary>
            We recommend using this API endpoint when you need to create or update
            a collection of subscribers at once. Note: Since our batch APIs process
            requests in the background, there may be a delay between the time you
            submit your request and the time your data appears in user interface.
            See: https://www.getdrip.com/docs/rest-api#subscriber_batches
            </summary>
            <param name="subscribers">An enumerable list of ModifyDripSubscribers to create or update.</param>
            <returns>A DripResponse.</returns>
        </member>
        <member name="M:Drip.DripClient.CreateOrUpdateSubscribersAsync(System.Collections.Generic.IEnumerable{Drip.ModifyDripSubscriberRequest},System.Threading.CancellationToken)">
            <summary>
            We recommend using this API endpoint when you need to create or update
            a collection of subscribers at once. Note: Since our batch APIs process
            requests in the background, there may be a delay between the time you
            submit your request and the time your data appears in user interface.
            See: https://www.getdrip.com/docs/rest-api#subscriber_batches
            </summary>
            <param name="subscribers">An enumerable list of ModifyDripSubscribers to create or update.</param>
            <param name="cancellationToken">The CancellationToken to be used to cancel the request.</param>
            <returns>A Task that, when completed, will contain a DripResponse.</returns>
        </member>
        <member name="T:Drip.DripMeta">
            <summary>
            Some endpoints that return collections are paginated. For these endpoints, 
            the meta object will tell you the current page, count, total number of pages, 
            and total count of the collection.
            </summary>
        </member>
        <member name="P:Drip.DripMeta.Page">
            <summary>
            The page number contained in the current response.
            </summary>
        </member>
        <member name="P:Drip.DripMeta.Count">
            <summary>
            The number of items in the current page.
            </summary>
        </member>
        <member name="P:Drip.DripMeta.TotalPages">
            <summary>
            The total number of pages in the collection.
            </summary>
        </member>
        <member name="P:Drip.DripMeta.TotalCount">
            <summary>
            The total number of items in the collection.
            </summary>
        </member>
        <member name="P:Drip.DripMeta.Sort">
            <summary>
            The field that was used to sort this collection.
            </summary>
        </member>
        <member name="P:Drip.DripMeta.Direction">
            <summary>
            The direction of the sort.
            </summary>
        </member>
        <member name="P:Drip.DripMeta.Status">
            <summary>
            The value of any "status" query supplied in a request.
            </summary>
        </member>
        <member name="T:Drip.DripResponse">
            <summary>
            Represents the response received from the Drip REST API. Subclasses of DripResponse
            contain strongly typed collections of the various resources.
            
            This is returned from every method on the DripClient that makes a REST call. 
            
            This library does not throw exceptions for application level errors returned by the
            REST API. Check the Errors collection for details on response errors.
            </summary>
        </member>
        <member name="P:Drip.DripResponse.Meta">
            <summary>
            Pagination and query metadata included on resopnses containing lists of items.
            </summary>
        </member>
        <member name="P:Drip.DripResponse.Links">
            <summary>
            Links to resources that are relevant to this response.
            </summary>
        </member>
        <member name="P:Drip.DripResponse.StatusCode">
            <summary>
            The Http status code returned with the response.
            This library does not throw exceptions for application level errors returned by the REST API.
            Check the Errors collection for details on response errors.
            </summary>
        </member>
        <member name="P:Drip.DripResponse.Errors">
            <summary>
            The collection of application level errors returned from the REST API.
            </summary>
        </member>
        <member name="P:Drip.DripResponse.OriginalResponse">
            <summary>
            The underlying response that was received.
            You shouldn't need to use this, but it might be helpful for debugging.
            </summary>
        </member>
        <member name="P:Drip.DripResponse.OriginalRequest">
            <summary>
            The underlying request that was sent
            You shouldn't need to use this, but it might be helpful for debugging.
            </summary>
        </member>
        <member name="M:Drip.DripResponse.HasErrors">
            <summary>
            A quick way to check if this DripResponse contains errors.
            This library does not throw exceptions for application level errors returned by the REST API.
            Check the Errors collection for details on response errors.
            </summary>
            <returns>True if there are any errors in this DripResponse, otherwise false.</returns>
        </member>
        <member name="T:Drip.Protocol.RestSharpLcaseUnderscoreSerializer">
            <summary>
            A serializer based on the one from this blog: http://blog.patrickmriley.net/2014/02/restsharp-using-jsonnet-serializer.html
            We use Json.NET to allow for easy naming translations.
            </summary>
        </member>
        <member name="T:Drip.Protocol.LcaseUnderscoreMappingResolver">
            <summary>
            A resolver used by RestSharpLcaseUnderscoreSerializer to convert property names to underscores and lowercases.
            From: http://stackoverflow.com/questions/3922874/c-sharp-json-net-convention-that-follows-ruby-property-naming-conventions
            </summary>
        </member>
        <member name="T:Drip.DripError">
            <summary>
            Drip returns error codes to all requests in a standard format.
            You can find the errors, if there are any, on the DripResponse object.
            See: https://www.getdrip.com/docs/rest-api#errors
            </summary>
        </member>
        <member name="P:Drip.DripError.Code">
            <summary>
            One of the well-known Drip error codes.
            See: https://www.getdrip.com/docs/rest-api#errors
            </summary>
        </member>
        <member name="P:Drip.DripError.Message">
            <summary>
            A detailed error message, useful for debugging.
            </summary>
        </member>
        <member name="P:Drip.DripEvent.Email">
            <summary>
            The subscriber's email address.
            </summary>
        </member>
        <member name="P:Drip.DripEvent.Action">
            <summary>
            The name of the action taken. E.g. "Logged in"
            </summary>
        </member>
        <member name="P:Drip.DripEvent.PotentialLead">
            <summary>
            Optional. A Boolean specifiying whether we should attach a lead score
            to the subscriber (when lead scoring is enabled). Defaults to false. 
            This flag only applies to new subscribers — if the subscriber already 
            exists, we will silently ignore this.
            </summary>
        </member>
        <member name="P:Drip.DripEvent.Properties">
            <summary>
            Optional. A dictionary containing custom event properties. If this event is
            a conversion, include the value (in cents) in the properties with a "value"
            key.
            </summary>
        </member>
        <member name="P:Drip.DripEvent.OccurredAt">
            <summary>
            Optional. Defaults to the current time.
            </summary>
        </member>
        <member name="T:Drip.DripSubscriber">
            <summary>
            Represents a Subscriber in a Drip account.
            </summary>
        </member>
        <member name="P:Drip.DripSubscriber.Email">
            <summary>
            The subscriber's email address.
            </summary>
        </member>
        <member name="P:Drip.DripSubscriber.Timezone">
            <summary>
            The subscriber's time zone (in Olsen format). Defaults to Etc/UTC
            </summary>
        </member>
        <member name="P:Drip.DripSubscriber.CustomFields">
            <summary>
            A dictionary containing custom field data. E.g. new Dictionary&lt;string,string&gt; { { "name" , "John Doe" } }
            </summary>
        </member>
        <member name="P:Drip.DripSubscriber.Tags">
            <summary>
            A list containing one or more tags. E.g. ["Customer", "SEO"].
            </summary>
        </member>
        <member name="P:Drip.DripSubscriber.ID">
            <summary>
            The subscriber's Unique ID. This can be used in place of an email address on some API calls.
            </summary>
        </member>
        <member name="P:Drip.DripSubscriber.Status">
            <summary>
            The subscriber's status (i.e. "active")
            </summary>
        </member>
        <member name="P:Drip.DripSubscriber.UtcOffset">
            <summary>
            The subscriber's local timezone utc offset as reported by their browser.
            </summary>
        </member>
        <member name="P:Drip.DripSubscriber.VisitorUuid">
            <summary>
            The Uuid of the visitor.
            </summary>
        </member>
        <member name="P:Drip.DripSubscriber.IpAddress">
            <summary>
            The IP Address used by the subscriber to access your site.
            </summary>
        </member>
        <member name="P:Drip.DripSubscriber.UserAgent">
            <summary>
            The user agent of the subscriber's web browser.
            </summary>
        </member>
        <member name="P:Drip.DripSubscriber.OriginalReferrer">
            <summary>
            The Url that originally referred the subscriber to your site.
            </summary>
        </member>
        <member name="P:Drip.DripSubscriber.CreatedAt">
            <summary>
            When this subscriber was created in Drip.
            </summary>
        </member>
        <member name="P:Drip.DripSubscriber.Href">
            <summary>
            The REST endpoint that can be used to retrieve the subscriber.
            </summary>
        </member>
        <member name="P:Drip.ModifyDripSubscriberRequest.Email">
            <summary>
            The subscriber's email address.
            </summary>
        </member>
        <member name="P:Drip.ModifyDripSubscriberRequest.TimeZone">
            <summary>
            The subscriber's time zone (in Olsen format). Defaults to Etc/UTC
            </summary>
        </member>
        <member name="P:Drip.ModifyDripSubscriberRequest.CustomFields">
            <summary>
            A dictionary containing custom field data. E.g. new Dictionary&lt;string,string&gt; { { "name" , "John Doe" } }
            </summary>
        </member>
        <member name="P:Drip.ModifyDripSubscriberRequest.Tags">
            <summary>
            A list containing one or more tags. E.g. ["Customer", "SEO"].
            </summary>
        </member>
        <member name="P:Drip.ModifyDripSubscriberRequest.NewEmail">
            <summary>
            Optional. A new email address for the subscriber. If provided and a subscriber
            with the email does not exist, this address will be used to create a new subscriber.
            </summary>
        </member>
        <member name="P:Drip.ModifyDripSubscriberRequest.PotentialLead">
            <summary>
            A Boolean specifiying whether we should attach a lead score to the
            subscriber (when lead scoring is enabled). Defaults to false. This flag only
            applies to new subscribers — if the subscriber already exists, we will silently
            ignore this.
            </summary>
        </member>
        <member name="P:Drip.ModifyDripCampaignSubscriberRequest.DoubleOptin">
            <summary>
            Optional. If true, the double opt-in confirmation email is sent; if false, 
            the confirmation email is skipped. Defaults to the value set on the campaign.
            </summary>
        </member>
        <member name="P:Drip.ModifyDripCampaignSubscriberRequest.StartingEmailIndex">
            <summary>
            Optional. The index (zero-based) of the email to send first. Defaults to 0.
            </summary>
        </member>
        <member name="P:Drip.ModifyDripCampaignSubscriberRequest.ReactivateIfRemoved">
            <summary>
            Optional. If true, re-subscribe the subscriber to the campaign if there is 
            a removed subscriber in Drip with the same email address; otherwise, respond
            with 422 Unprocessable Entity. Defaults to true.
            </summary>
        </member>
        <member name="T:Drip.DripSubscribersResponse">
            <summary>
            A response that contains DripSubscriber items.
            </summary>
        </member>
        <member name="P:Drip.DripSubscribersResponse.Subscribers">
            <summary>
            The Subscribers that were returned by the API endpoint.
            </summary>
        </member>
        <member name="P:Drip.DripTag.Email">
            <summary>
            The subscriber's email address.
            </summary>
        </member>
        <member name="P:Drip.DripTag.Tag">
            <summary>
            The String tag to apply. E.g. "Customer".
            </summary>
        </member>
    </members>
</doc>
